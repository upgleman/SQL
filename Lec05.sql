--[실습1] 단일 행 서브쿼리 1
-- 단일 행 서브쿼리(Single-Row Subquery)는 서브쿼리의 조회 결과가 1개의 행만 나오는 서브쿼리를 뜻합니다.

-- 서브쿼리에서 나오는 결과가 하나이므로 메인쿼리와 서브쿼리 결과는 단일행 연산자를 사용하여 비교합니다.

-- 단일행 서브쿼리에서 사용되는 연산자

-- 연산자 기호	연산자 뜻
-- =	같다
-- <>	같지 않다
-- >	크다
-- >=	크거나 같다

-- 지시사항
-- emp테이블을 조회해주세요.
-- 사원 번호가 7인 사원보다 나이가 어린 사원을 조회하는 쿼리를 작성하세요.

--서브쿼리의 조회 결과가 1개의 행만 나오는 서브쿼리

DESC emp;
SELECT * FROM emp;
-- 사원 번호가 7인 사원보다 나이가 어린 사원의 모든 컬럼을 조회 하는 쿼리를 작성하세요.
select * from emp
where birthdate >
(select birthdate from emp
where empnum =7);

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  800 |     10 |
|      2 | SMITH  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  800 |     10 |
|      2 | SMITH  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+


--[실습2] 단일 행 서브쿼리 2
-- 단일 행 서브쿼리(Single-Row Subquery)는 서브쿼리의 조회 결과가 1개의 행만 나오는 서브쿼리를 뜻합니다.

-- 서브쿼리에서 나오는 결과가 하나이므로 메인쿼리와 서브쿼리 결과는 단일행 연산자를 사용하여 비교합니다.

-- 단일행 서브쿼리에서 사용되는 연산자

-- 연산자 기호	연산자 뜻
-- =	같다
-- <>	같지 않다
-- >	크다
-- >=	크거나 같다

-- 지시사항
-- emp테이블을 조회해주세요.
-- 전 사원의 급여 평균보다 낮은 급여를 받는 사원을 조회하는 쿼리를 작성하세요.
DESC emp;
SELECT * FROM emp;
-- 전 사원의 급여 평균보다 낮은 급여를 받는 사원의 모든 컬럼을 조회 하는 쿼리를 작성하세요.
-- sub query
select avg(sal) from emp;

-- main query
select * from emp
where sal < any
(select avg(sal) from emp);

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  800 |     10 |
|      2 | SMITH  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+-----------+
| avg(sal)  |
+-----------+
| 2030.3571 |
+-----------+
+--------+--------+----------+------------+------+--------+
| empnum | name   | job      | birthdate  | sal  | deptno |
+--------+--------+----------+------------+------+--------+
|      1 | SMITH  | CLERK    | 1990-12-17 |  800 |     10 |
|      2 | SMITH  | SALESMAN | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN | 1983-02-22 | 1250 |     30 |
|      5 | MARTIN | SALESMAN | 1981-09-28 | 1250 |     10 |
|      8 | SCOTT  | ANALYST  | 1987-07-13 | 2000 |     40 |
|     10 | TURNER | SALESMAN | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK    | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK    | 1990-12-03 |  950 |     40 |
|     14 | MILLER | CLERK    | 1982-01-23 | 1300 |     20 |
+--------+--------+----------+------------+------+--------+

--[실습3] 단일 행 서브쿼리 3
-- 단일 행 서브쿼리(Single-Row Subquery)는 서브쿼리의 조회 결과가 1개의 행만 나오는 서브쿼리를 뜻합니다.

-- 서브쿼리에서 출력되는 결과가 하나이므로 메인쿼리와 서브쿼리 결과는 단일행 연산자를 사용하여 비교합니다.


-- 지시사항
-- emp테이블에서 부서번호가 40인 부서의 급여 평균보다 높게 받는 사원들의 모든 컬럼과 나이를 조회하는 쿼리를 작성해주세요.
-- Tips
-- 나이를 구하는 수식은 제공해 드립니다!
-- 생년월일을 토대로 지금 년도에 몇 살인지 반환하는 수식이라 생각하고 실습을 진행해 주세요.

DESC emp;
SELECT * FROM emp;
-- 부서번호가 40인 부서의 급여 평균보다 높게 받는 사원들의 모든 컬럼과 나이를 조회하는 쿼리를 작성해주세요.

-- sub query
select avg(sal) from emp
where deptno = 40;

-- main query
select *,
FLOOR( (CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) - 
       CAST(REPLACE(birthdate,'-','') AS UNSIGNED)) / 10000 ) as age
from emp
where sal >
(select avg(sal) from emp
where deptno = 40);

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  800 |     10 |
|      2 | SMITH  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+-----------+
| avg(sal)  |
+-----------+
| 1975.0000 |
+-----------+
+--------+-------+-----------+------------+------+--------+------+
| empnum | name  | job       | birthdate  | sal  | deptno | age  |
+--------+-------+-----------+------------+------+--------+------+
|      4 | JONES | MANAGER   | 1981-04-02 | 2975 |     40 |   41 |
|      6 | BLAKE | MANAGER   | 1981-05-01 | 2850 |     20 |   41 |
|      7 | CLARK | MANAGER   | 1981-06-09 | 2450 |     30 |   41 |
|      8 | SCOTT | ANALYST   | 1987-07-13 | 2000 |     40 |   35 |
|      9 | KING  | PRESIDENT | 1982-11-17 | 5000 |     10 |   39 |
|     13 | FORD  | ANALYST   | 1981-12-03 | 3000 |     10 |   40 |
+--------+-------+-----------+------------+------+--------+------+

--[실습4] 다중 행 서브쿼리 1
-- 다중 행 서브쿼리(Multiple-Row Subquery) 는 서브쿼리의 조회 결과가 두개 이상의 row가 나오는 서브쿼리를 뜻합니다.

-- 다중 행 비교 연산자

-- 연산자	연산자 뜻
-- IN	하나라도 만족하면 참
-- ANY	내부적으로 모두 or 연산을 함
-- ALL	내부적으로 모두 and 연산을 함

-- 지시사항
-- emp테이블에서 'MANAGER' 업무를 가진 사원 중 제일 높은 급여를 받는 사원보다 높은 급여를 받는 사원의 모든 컬럼을 조회하는 쿼리를 작성 해주세요.

DESC emp;
SELECT * FROM emp;
-- MANAGER 업무를 가진 사원 중 제일 높은 급여를 받는 사원보다 높은 급여를 받는 사원을 조회하는 쿼리를 작성해주세요.

-- sub query
select MAX(sal) from emp 
where job = 'MANAGER';

-- main query
select * from emp
where sal > ALL
(select MAX(sal) from emp 
where job = 'MANAGER');

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  900 |     10 |
|      2 | ALLEN  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+----------+
| MAX(sal) |
+----------+
|     2975 |
+----------+
+--------+------+-----------+------------+------+--------+
| empnum | name | job       | birthdate  | sal  | deptno |
+--------+------+-----------+------------+------+--------+
|      9 | KING | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     13 | FORD | ANALYST   | 1981-12-03 | 3000 |     10 |
+--------+------+-----------+------------+------+--------+

--[실습5] 다중 행 서브쿼리 2
-- 다중 행 서브쿼리(Multiple-Row Subquery) 는 서브쿼리의 조회 결과가 두개 이상의 row가 나오는 서브쿼리를 뜻합니다.

-- 다중 행 비교 연산자

-- 연산자	연산자 뜻
-- IN	하나라도 만족하면 참
-- ANY	내부적으로 모두 or 연산을 함
-- ALL	내부적으로 모두 and 연산을 함

-- 지시사항
-- emp테이블에서 각 부서별 급여를 제일 많이 받는 사원들을 출력해주세요.
-- Tips
-- 서브쿼리 내에서 각 부서별(group by deptno) 제일 높은 월급(max(sal))의 액수를 조회하는 서브쿼리를 작성하세요.
-- 영상에서 작성된 코드는 각 부서에서 가장 많은 급여(max(sal))과 같은 급여를 받는 모든 사원을 출력합니다. 예를 들어, 10번 부서에서 사원이 받는 최고 급여가 2750인 경우 20번 부서에서 2750 급여를 받는 사원도 쿼리에서 출력됩니다.
-- 이를 방지하려면 아래처럼 group by deptno으로 부서 별로 최고 급여를 받는 사람을 각각 구하면 됩니다.

DESC emp;
SELECT * FROM emp;
-- 각 부서별 급여를 제일 많이 받는 사원의 월급을 받는 사원들을 조회하는 쿼리를 작성해주세요.

-- 서브쿼리
select deptno, MAX(sal) from emp 
group by deptno order by empnum;

-- 메인 쿼리
select * from emp
where sal = ANY
(select MAX(sal) from emp 
group by deptno order by empnum);

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  900 |     10 |
|      2 | ALLEN  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+--------+----------+
| deptno | MAX(sal) |
+--------+----------+
|     10 |     5000 |
|     20 |     2850 |
|     30 |     2450 |
|     40 |     2975 |
+--------+----------+
+--------+-------+-----------+------------+------+--------+
| empnum | name  | job       | birthdate  | sal  | deptno |
+--------+-------+-----------+------------+------+--------+
|      4 | JONES | MANAGER   | 1981-04-02 | 2975 |     40 |
|      6 | BLAKE | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK | MANAGER   | 1981-06-09 | 2450 |     30 |
|      9 | KING  | PRESIDENT | 1982-11-17 | 5000 |     10 |
+--------+-------+-----------+------------+------+--------+

--[실습6] 다중 행 서브쿼리 3
-- 다중 행 서브쿼리(Multiple-Row Subquery) 는 서브쿼리의 조회 결과가 두개 이상의 row가 나오는 서브쿼리를 뜻합니다.

-- 다중 행 비교 연산자

-- 연산자	연산자 뜻
-- IN	하나라도 만족하면 참
-- ANY	내부적으로 모두 or 연산을 함
-- ALL	내부적으로 모두 and 연산을 함

-- 지시사항
-- emp테이블에서 각 부서별 나이가 제일 많은 사원의 모든 컬럼을 조회하는 쿼리를 작성해주세요.
-- Tips
-- 서브쿼리 내에서 부서별로 group by하여 생년월일이 제일 작은, 즉 min(birthdate)를 하게 되면 총 네개의 로우가 반환되겠죠?


-- 각 부서별 나이가 제일 많은 사원을 조회하는 쿼리를 작성해주세요.
DESC emp;
select * from emp;

-- 서브쿼리
select deptno, min(birthdate) from emp
group by deptno;

-- 메인 쿼리
select * from emp
where birthdate in
(select min(birthdate) from emp
group by deptno)
order by deptno;

-- ANY 메인 쿼리
select * from emp
where birthdate = ANY
(select min(birthdate) from emp
group by deptno);

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| empnum    | int(3)      | NO   | PRI | NULL    | auto_increment |
| name      | varchar(10) | NO   |     | NULL    |                |
| job       | varchar(10) | NO   |     | NULL    |                |
| birthdate | varchar(12) | NO   |     | NULL    |                |
| sal       | int(5)      | NO   |     | NULL    |                |
| deptno    | int(2)      | NO   |     | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
+--------+--------+-----------+------------+------+--------+
| empnum | name   | job       | birthdate  | sal  | deptno |
+--------+--------+-----------+------------+------+--------+
|      1 | SMITH  | CLERK     | 1990-12-17 |  800 |     10 |
|      2 | ALLEN  | SALESMAN  | 1982-02-20 | 1600 |     20 |
|      3 | WARD   | SALESMAN  | 1983-02-22 | 1250 |     30 |
|      4 | JONES  | MANAGER   | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN  | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER   | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER   | 1981-06-09 | 2450 |     30 |
|      8 | SCOTT  | ANALYST   | 1987-07-13 | 2000 |     40 |
|      9 | KING   | PRESIDENT | 1982-11-17 | 5000 |     10 |
|     10 | TURNER | SALESMAN  | 1983-09-08 | 1900 |     20 |
|     11 | ADAMS  | CLERK     | 1987-07-13 | 1100 |     30 |
|     12 | JAMES  | CLERK     | 1990-12-03 |  950 |     40 |
|     13 | FORD   | ANALYST   | 1981-12-03 | 3000 |     10 |
|     14 | MILLER | CLERK     | 1982-01-23 | 1300 |     20 |
+--------+--------+-----------+------------+------+--------+
+--------+----------------+
| deptno | min(birthdate) |
+--------+----------------+
|     10 | 1981-09-28     |
|     20 | 1981-05-01     |
|     30 | 1981-06-09     |
|     40 | 1981-04-02     |
+--------+----------------+
+--------+--------+----------+------------+------+--------+
| empnum | name   | job      | birthdate  | sal  | deptno |
+--------+--------+----------+------------+------+--------+
|      5 | MARTIN | SALESMAN | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER  | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER  | 1981-06-09 | 2450 |     30 |
|      4 | JONES  | MANAGER  | 1981-04-02 | 2975 |     40 |
+--------+--------+----------+------------+------+--------+
+--------+--------+----------+------------+------+--------+
| empnum | name   | job      | birthdate  | sal  | deptno |
+--------+--------+----------+------------+------+--------+
|      4 | JONES  | MANAGER  | 1981-04-02 | 2975 |     40 |
|      5 | MARTIN | SALESMAN | 1981-09-28 | 1250 |     10 |
|      6 | BLAKE  | MANAGER  | 1981-05-01 | 2850 |     20 |
|      7 | CLARK  | MANAGER  | 1981-06-09 | 2450 |     30 |
+--------+--------+----------+------------+------+--------+


--[실습7] 하나라도? 혹은 전부? - ANY, ALL
-- ANY 는 만족하는 조건이 하나라도 있으면 참이 되는 것이고 ALL 은 모든 조건이 참이 되어야 만족합니다.


-- 지시사항
-- salaries테이블에서 시작일(from_date)이 '2000-12-31' 이전인 사람들의 급여 중 하나의 급여 보다 더 적은 급여를 받은 직원의 급여 정보를 모두 검색해봅시다.
-- salaries테이블에서 시작일(from_date)이 '2000-12-31' 이전인 사람들의 급여 중 모든 급여보다 적은 급여를 받은 직원의 급여에 대한 정보를 모두 검색해봅시다.

--ANY 는 만족하는 조건이 하나라도 있으면 참이 되는 것이고 ALL 은 모든 조건이 참이 되어야 만족합니다.
DESC salaries;
select * from salaries;

-- salaries 테이블에서 from_date가 2000-12-31 이전인 사람들의 급여 중 하나의 급여 보다 더 적은 급여를 받은 직원의 급여 정보를 모두 출력해보세요.
-- 서브쿼리 = from_date가 2000-12-31 이전인 사람들의 급여
select salary from salaries
where from_date < '2000-12-31';

-- 메인쿼리 = 이 급여 보다 더 적은 급여를 받은 직원의 급여 정보
select * from salaries
where salary < ANY -- max 최대값 비교와 동일
(select salary from salaries
where from_date < '2000-12-31');


-- salaries 테이블에서 from_date가 2000-12-31 이전인 사람들의 급여 중 모든 급여보다 적은 급여를 받은 직원의 급여 정보를 모두 출력해보세요.
-- 서브쿼리 = from_date가 2000-12-31 이전인 사람들의 급여 
-- 위와 동일

-- 메인쿼리 = 이 급여 보다 더 적은 급여를 받은 직원의 급여 정보
select * from salaries
where salary < ALL -- min 최솟값 비교와 동일
(select salary from salaries
where from_date < '2000-12-31');

+-----------+---------+------+-----+---------+-------+
| Field     | Type    | Null | Key | Default | Extra |
+-----------+---------+------+-----+---------+-------+
| emp_no    | int(11) | NO   |     | NULL    |       |
| salary    | int(11) | NO   |     | NULL    |       |
| from_date | date    | NO   |     | NULL    |       |
| to_date   | date    | NO   |     | NULL    |       |
+-----------+---------+------+-----+---------+-------+
+--------+--------+------------+------------+
| emp_no | salary | from_date  | to_date    |
+--------+--------+------------+------------+
|  10001 |  42958 | 2002-06-22 | 2003-06-22 |
|  10002 |  70230 | 2001-08-02 | 2002-08-02 |
|  10003 |  40000 | 2001-12-01 | 2002-12-01 |
|  10004 |  74057 | 2001-11-27 | 2002-11-27 |
|  10005 |  94692 | 2001-09-09 | 2002-09-09 |
|  10006 |  60100 | 2001-08-02 | 2002-08-02 |
|  10007 |  88070 | 2002-02-07 | 2003-02-07 |
|  10008 |  50104 | 2000-03-10 | 2001-03-10 |
|  10009 |  94409 | 2002-02-14 | 2003-02-14 |
|  10010 |  50324 | 2001-11-23 | 2002-11-23 |
|  10011 |  46753 | 1996-01-21 | 1997-01-21 |
|  10012 |  44423 | 2001-12-16 | 2002-12-16 |
|  10013 |  68901 | 2001-10-16 | 2002-10-16 |
|  10014 |  54223 | 2001-12-27 | 2002-12-27 |
|  10015 |  46200 | 1992-09-19 | 1993-09-19 |
|  10016 |  47935 | 2002-02-10 | 2003-02-10 |
|  10017 |  56000 | 1993-08-03 | 1994-08-03 |
|  10018 |  84672 | 2002-03-30 | 2003-03-30 |
+--------+--------+------------+------------+
+--------+
| salary |
+--------+
|  50104 |
|  46753 |
|  46200 |
|  56000 |
+--------+
+--------+--------+------------+------------+
| emp_no | salary | from_date  | to_date    |
+--------+--------+------------+------------+
|  10001 |  42958 | 2002-06-22 | 2003-06-22 |
|  10003 |  40000 | 2001-12-01 | 2002-12-01 |
|  10008 |  50104 | 2000-03-10 | 2001-03-10 |
|  10010 |  50324 | 2001-11-23 | 2002-11-23 |
|  10011 |  46753 | 1996-01-21 | 1997-01-21 |
|  10012 |  44423 | 2001-12-16 | 2002-12-16 |
|  10014 |  54223 | 2001-12-27 | 2002-12-27 |
|  10015 |  46200 | 1992-09-19 | 1993-09-19 |
|  10016 |  47935 | 2002-02-10 | 2003-02-10 |
+--------+--------+------------+------------+
+--------+--------+------------+------------+
| emp_no | salary | from_date  | to_date    |
+--------+--------+------------+------------+
|  10001 |  42958 | 2002-06-22 | 2003-06-22 |
|  10003 |  40000 | 2001-12-01 | 2002-12-01 |
|  10012 |  44423 | 2001-12-16 | 2002-12-16 |
+--------+--------+------------+------------+

--[실습8] 스칼라 서브쿼리
-- select절에서 서브쿼리를 사용하는 것을 스칼라 서브쿼리라고 합니다.

-- 이 스칼라 서브쿼리는 오로지 한 행만을 반환하는 특징을 가집니다.

-- salaries 테이블에는 한 직원의 연도별 급여들이 들어있으며 스칼라 서브쿼리를 사용해 각 직원별 직원의 평균급여를 검색해야합니다.

-- 조인을 사용하지 않고, 직원 번호와 평균 급여를 중복 없이 출력해주세요.


-- 지시사항
-- salaries 테이블에서 직원 번호(emp_no)과 평균급여(avg_salary) 두 가지를 검색합니다.
-- 평균 급여는 SELECT 절에서 서브쿼리를 이용해 직접 계산하며 별칭을 avg_salary로 지정합니다.
-- 중복 없이 검색하기 위해 DISTINCT 를 이용하세요.

--select절에서 서브쿼리를 사용하는 것을 스칼라 서브쿼리

DESC salaries;
select * from salaries;
-- salaries 테이블에서 직원 번호와 한 직원의 평균 급여를 중복없이 출력해보세요.
select distinct emp_no, avg(salary)
from salaries;

-- 메인 쿼리
select distinct emp_no,
-- 서브 쿼리 avg_salary
(
select avg(salary)
from salaries as A
where A.emp_no = B.emp_no
) as avg_salary
from salaries as B;

+-----------+---------+------+-----+---------+-------+
| Field     | Type    | Null | Key | Default | Extra |
+-----------+---------+------+-----+---------+-------+
| emp_no    | int(11) | NO   |     | NULL    |       |
| salary    | int(11) | NO   |     | NULL    |       |
| to_date   | date    | NO   |     | NULL    |       |
| from_date | date    | NO   |     | NULL    |       |
+-----------+---------+------+-----+---------+-------+
+--------+--------+------------+------------+
| emp_no | salary | to_date    | from_date  |
+--------+--------+------------+------------+
|  10001 |  60117 | 1986-06-26 | 1987-06-26 |
|  10001 |  62102 | 1987-06-26 | 1988-06-25 |
|  10001 |  66074 | 1988-06-25 | 1989-06-25 |
|  10001 |  66596 | 1989-06-25 | 1990-06-25 |
|  10001 |  66961 | 1990-06-25 | 1991-06-25 |
|  10001 |  71046 | 1991-06-25 | 1992-06-24 |
|  10001 |  74333 | 1992-06-24 | 1993-06-24 |
|  10001 |  75286 | 1993-06-24 | 1994-06-24 |
|  10001 |  75994 | 1994-06-24 | 1995-06-24 |
|  10001 |  76884 | 1995-06-24 | 1996-06-23 |
|  10001 |  80013 | 1996-06-23 | 1997-06-23 |
|  10001 |  81025 | 1997-06-23 | 1998-06-23 |
|  10001 |  81097 | 1998-06-23 | 1999-06-23 |
|  10001 |  84917 | 1999-06-23 | 2000-06-22 |
|  10001 |  85112 | 2000-06-22 | 2001-06-22 |
|  10001 |  85097 | 2001-06-22 | 2002-06-22 |
|  10001 |  88958 | 2002-06-22 | 9999-01-01 |
|  10002 |  65828 | 1996-08-03 | 1997-08-03 |
|  10002 |  65909 | 1997-08-03 | 1998-08-03 |
|  10002 |  67534 | 1998-08-03 | 1999-08-03 |
|  10002 |  69366 | 1999-08-03 | 2000-08-02 |
|  10002 |  71963 | 2000-08-02 | 2001-08-02 |
|  10002 |  72527 | 2001-08-02 | 9999-01-01 |
|  10003 |  40006 | 1995-12-03 | 1996-12-02 |
|  10003 |  43616 | 1996-12-02 | 1997-12-02 |
|  10003 |  43466 | 1997-12-02 | 1998-12-02 |
|  10003 |  43636 | 1998-12-02 | 1999-12-02 |
|  10003 |  43478 | 1999-12-02 | 2000-12-01 |
|  10003 |  43699 | 2000-12-01 | 2001-12-01 |
|  10003 |  43311 | 2001-12-01 | 9999-01-01 |
|  10004 |  40054 | 1986-12-01 | 1987-12-01 |
|  10004 |  42283 | 1987-12-01 | 1988-11-30 |
|  10004 |  42542 | 1988-11-30 | 1989-11-30 |
|  10004 |  46065 | 1989-11-30 | 1990-11-30 |
|  10004 |  48271 | 1990-11-30 | 1991-11-30 |
|  10004 |  50594 | 1991-11-30 | 1992-11-29 |
|  10004 |  52119 | 1992-11-29 | 1993-11-29 |
|  10004 |  54693 | 1993-11-29 | 1994-11-29 |
|  10004 |  58326 | 1994-11-29 | 1995-11-29 |
|  10004 |  60770 | 1995-11-29 | 1996-11-28 |
|  10004 |  62566 | 1996-11-28 | 1997-11-28 |
|  10004 |  64340 | 1997-11-28 | 1998-11-28 |
|  10004 |  67096 | 1998-11-28 | 1999-11-28 |
|  10004 |  69722 | 1999-11-28 | 2000-11-27 |
|  10004 |  70698 | 2000-11-27 | 2001-11-27 |
|  10004 |  74057 | 2001-11-27 | 9999-01-01 |
|  10005 |  78228 | 1989-09-12 | 1990-09-12 |
|  10005 |  82621 | 1990-09-12 | 1991-09-12 |
|  10005 |  83735 | 1991-09-12 | 1992-09-11 |
|  10005 |  85572 | 1992-09-11 | 1993-09-11 |
|  10005 |  85076 | 1993-09-11 | 1994-09-11 |
|  10005 |  86050 | 1994-09-11 | 1995-09-11 |
|  10005 |  88448 | 1995-09-11 | 1996-09-10 |
|  10005 |  88063 | 1996-09-10 | 1997-09-10 |
|  10005 |  89724 | 1997-09-10 | 1998-09-10 |
|  10005 |  90392 | 1998-09-10 | 1999-09-10 |
|  10005 |  90531 | 1999-09-10 | 2000-09-09 |
|  10005 |  91453 | 2000-09-09 | 2001-09-09 |
|  10005 |  94692 | 2001-09-09 | 9999-01-01 |
|  10006 |  40000 | 1990-08-05 | 1991-08-05 |
|  10006 |  42085 | 1991-08-05 | 1992-08-04 |
|  10006 |  42629 | 1992-08-04 | 1993-08-04 |
|  10006 |  45844 | 1993-08-04 | 1994-08-04 |
|  10006 |  47518 | 1994-08-04 | 1995-08-04 |
|  10006 |  47917 | 1995-08-04 | 1996-08-03 |
|  10006 |  52255 | 1996-08-03 | 1997-08-03 |
|  10006 |  53747 | 1997-08-03 | 1998-08-03 |
|  10006 |  56032 | 1998-08-03 | 1999-08-03 |
|  10006 |  58299 | 1999-08-03 | 2000-08-02 |
|  10006 |  60098 | 2000-08-02 | 2001-08-02 |
|  10006 |  59755 | 2001-08-02 | 9999-01-01 |
|  10007 |  56724 | 1989-02-10 | 1990-02-10 |
|  10007 |  60740 | 1990-02-10 | 1991-02-10 |
|  10007 |  62745 | 1991-02-10 | 1992-02-10 |
|  10007 |  63475 | 1992-02-10 | 1993-02-09 |
|  10007 |  63208 | 1993-02-09 | 1994-02-09 |
|  10007 |  64563 | 1994-02-09 | 1995-02-09 |
|  10007 |  68833 | 1995-02-09 | 1996-02-09 |
|  10007 |  70220 | 1996-02-09 | 1997-02-08 |
|  10007 |  73362 | 1997-02-08 | 1998-02-08 |
|  10007 |  75582 | 1998-02-08 | 1999-02-08 |
|  10007 |  79513 | 1999-02-08 | 2000-02-08 |
|  10007 |  80083 | 2000-02-08 | 2001-02-07 |
|  10007 |  84456 | 2001-02-07 | 2002-02-07 |
|  10007 |  88070 | 2002-02-07 | 9999-01-01 |
|  10008 |  46671 | 1998-03-11 | 1999-03-11 |
|  10008 |  48584 | 1999-03-11 | 2000-03-10 |
|  10008 |  52668 | 2000-03-10 | 2000-07-31 |
|  10009 |  60929 | 1985-02-18 | 1986-02-18 |
|  10009 |  64604 | 1986-02-18 | 1987-02-18 |
|  10009 |  64780 | 1987-02-18 | 1988-02-18 |
|  10009 |  66302 | 1988-02-18 | 1989-02-17 |
|  10009 |  69042 | 1989-02-17 | 1990-02-17 |
|  10009 |  70889 | 1990-02-17 | 1991-02-17 |
|  10009 |  71434 | 1991-02-17 | 1992-02-17 |
|  10009 |  74612 | 1992-02-17 | 1993-02-16 |
|  10009 |  76518 | 1993-02-16 | 1994-02-16 |
|  10009 |  78335 | 1994-02-16 | 1995-02-16 |
|  10009 |  80944 | 1995-02-16 | 1996-02-16 |
|  10009 |  82507 | 1996-02-16 | 1997-02-15 |
|  10009 |  85875 | 1997-02-15 | 1998-02-15 |
|  10009 |  89324 | 1998-02-15 | 1999-02-15 |
|  10009 |  90668 | 1999-02-15 | 2000-02-15 |
|  10009 |  93507 | 2000-02-15 | 2001-02-14 |
|  10009 |  94443 | 2001-02-14 | 2002-02-14 |
|  10009 |  94409 | 2002-02-14 | 9999-01-01 |
|  10010 |  72488 | 1996-11-24 | 1997-11-24 |
|  10010 |  74347 | 1997-11-24 | 1998-11-24 |
|  10010 |  75405 | 1998-11-24 | 1999-11-24 |
|  10010 |  78194 | 1999-11-24 | 2000-11-23 |
|  10010 |  79580 | 2000-11-23 | 2001-11-23 |
|  10010 |  80324 | 2001-11-23 | 9999-01-01 |
+--------+--------+------------+------------+
+--------+-------------+
| emp_no | avg(salary) |
+--------+-------------+
|  10001 |  68302.3929 |
+--------+-------------+
+--------+------------+
| emp_no | avg_salary |
+--------+------------+
|  10001 | 75388.9412 |
|  10002 | 68854.5000 |
|  10003 | 43030.2857 |
|  10004 | 56512.2500 |
|  10005 | 87275.7692 |
|  10006 | 50514.9167 |
|  10007 | 70826.7143 |
|  10008 | 49307.6667 |
|  10009 | 78284.5556 |
|  10010 | 76723.0000 |
+--------+------------+

