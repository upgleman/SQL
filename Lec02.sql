-- [실습1] 데이터에서 유사한 값 찾기 - LIKE

-- 아래에 hire_date가 1997-07-07인 직원만 조회하는 쿼리를 작성해주세요.
-- LIKE 문은 대소문자를 우선순위로 구분합니다. 예를 들어 th로 검색을 한다면 th, Th, TH 순으로 정렬되어 검색합니다.
select * from employees
where hire_date like '1997-07-07';

+--------+------------+------------+-----------+--------+------------+-------------+
| emp_no | birth_date | first_name | last_name | gender | hire_date  | superior_no |
+--------+------------+------------+-----------+--------+------------+-------------+
|  11430 | 1957-01-23 | Georgi     | Lueh      | M      | 1997-07-07 |       12258 |
|  15103 | 1964-04-05 | Eran       | Rosiles   | M      | 1997-07-07 |       10002 |
+--------+------------+------------+-----------+--------+------------+-------------+

-- [실습2] 와일드 카드를 사용한 검색 - LIKE, WILDCARDS 1

-- 책들의 정보가 담겨있는 테이블의 구조를 조회합니다. 수정하실 필요는 없습니다.
DESC book;

-- 아래에 제목이 The Little로 시작하는 책만 조회하는 쿼리를 작성해주세요.
select * from book
where title like 'The Little%';
-- 아래에 제목에 and가 포함된 책만 조회하는 쿼리를 작성해주세요.
select * from book
where title like '%and%';
-- 아래에 제목이 Rings로 끝나는 책만 조회하는 쿼리를 작성해주세요.
select * from book
where title like '%Rings';

+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| id            | int(11)     | NO   | PRI | NULL    |       |
| title         | varchar(64) | NO   |     | NULL    |       |
| author        | varchar(16) | YES  |     | NULL    |       |
| publisher     | varchar(32) | YES  |     | NULL    |       |
| date_received | date        | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
+------+-------------------+------------------+-----------+---------------+
| id   | title             | author           | publisher | date_received |
+------+-------------------+------------------+-----------+---------------+
| 1002 | The Little Prince | Antoine de Saint | NULL      | 2018-12-21    |
+------+-------------------+------------------+-----------+---------------+
+------+------------------------------------------+------------------+-----------------------+---------------+
| id   | title                                    | author           | publisher             | date_received |
+------+------------------------------------------+------------------+-----------------------+---------------+
| 1000 | Romeo and Juliet                         | William Shakespe | NULL                  | 2012-04-01    |
| 1003 | Harry Potter and the Philosopher's Stone | Joanne Kathleen  | Bloomsbury Publishing | 2017-06-26    |
+------+------------------------------------------+------------------+-----------------------+---------------+
+------+-----------------------+------------------+---------------+---------------+
| id   | title                 | author           | publisher     | date_received |
+------+-----------------------+------------------+---------------+---------------+
| 1004 | The Lord of the Rings | John Ronald Reue | Allen & Unwin | 2014-07-29    |
+------+-----------------------+------------------+---------------+---------------+
'

-- [실습3] 와일드 카드를 사용한 검색 - LIKE, WILDCARDS 2

-- 아래에 hire_date에 7이 들어가는 직원을 조회하는 쿼리를 작성해주세요.
select * from employees
where hire_date like '%7%';

+--------+------------+------------+---------------+--------+------------+-------------+
| emp_no | birth_date | first_name | last_name     | gender | hire_date  | superior_no |
+--------+------------+------------+---------------+--------+------------+-------------+
|  11430 | 1957-01-23 | Georgi     | Lueh          | M      | 1997-07-07 |       10004 |
|  12258 | 1955-12-12 | Susanna    | Rosiles       | F      | 1985-05-17 |        NULL |
|  14201 | 1964-07-03 | Chirstian  | Lueh          | M      | 1991-07-26 |       12258 |
|  15103 | 1964-04-05 | Eran       | Rosiles       | M      | 1997-07-07 |       10004 |
|  15256 | 1960-12-02 | Irene      | Radhakrishnan | M      | 1987-10-12 |        NULL |
|  16258 | 1955-12-12 | Basil      | Ishibashi     | F      | 1985-05-17 |        NULL |
|  16671 | 1956-01-14 | Kish       | Orlowska      | M      | 1986-07-08 |        NULL |
+--------+------------+------------+---------------+--------+------------+-------------+

-- [실습4] 데이터 정렬하기 - ORDER BY 1

--- book 테이블의 구조를 조회합니다. 수정하실 필요는 없습니다.
DESC book;

-- book 테이블의 내용을 조회해 봅시다. 이때 책 제목을 기준으로 오름차순으로 조회해 봅시다.

select * from book
order by title ASC;

+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| id            | int(11)     | NO   | PRI | NULL    |       |
| title         | varchar(64) | NO   |     | NULL    |       |
| author        | varchar(64) | YES  |     | NULL    |       |
| publisher     | varchar(32) | YES  |     | NULL    |       |
| date_received | date        | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
+------+------------------------------------------+------------------------------+-----------------------+---------------+
| id   | title                                    | author                       | publisher             | date_received |
+------+------------------------------------------+------------------------------+-----------------------+---------------+
| 1001 | Don Quixote                              | Miguel de Cervantes Saavedra | NULL                  | 2015-03-31    |
| 1003 | Harry Potter and the Philosopher's Stone | Joanne Kathleen Rowling      | Bloomsbury Publishing | 2017-06-26    |
| 1000 | Romeo and Juliet                         | William Shakespeare          | NULL                  | 2012-04-01    |
| 1002 | The Little Prince                        | Antoine de Saint-Exupery     | NULL                  | 2018-12-21    |
| 1004 | The Lord of the Rings                    | John Ronald Reuel Tolkien    | Allen & Unwin         | 2014-07-29    |
+------+------------------------------------------+------------------------------+-----------------------+---------------+
'
-- [실습5] 데이터 정렬하기 - ORDER BY 2

-- salaries 테이블의 내용을 출력해 봅시다. 이때 연봉액 제목을 기준으로 오름차순으로 출력해 봅시다.
select * from salaries
order by salary asc;

+--------+--------+------------+------------+
| emp_no | salary | from_date  | to_date    |
+--------+--------+------------+------------+
|  10006 |  40000 | 1990-08-05 | 1991-08-05 |
|  10003 |  40006 | 1995-12-03 | 1996-12-02 |
|  10004 |  40054 | 1986-12-01 | 1987-12-01 |
|  10006 |  42085 | 1991-08-05 | 1992-08-04 |
|  10004 |  42283 | 1987-12-01 | 1988-11-30 |
|  10004 |  42542 | 1988-11-30 | 1989-11-30 |
|  10006 |  42629 | 1992-08-04 | 1993-08-04 |
|  10003 |  43311 | 2001-12-01 | 9999-01-01 |

-- [실습6] 새로운 데이터 삽입하기

-- INSERT문을 이용해 쿼리를 작성해 보세요.
-- 정수, 실수 자료형의 경우 그대로 작성하고 문자, 날짜 등은 작은따옴표 '로 감싸면 됩니다.
DESC employees;

INSERT INTO employees
(emp_no,birth_date,
first_name,last_name,gender,
hire_date,superior_no)

VALUES (10001,'1953-09-02',
'Georgi','Facello','M',
'1986-06-26',NULL);


-- 값을 잘 넣었는지 확인하는 코드입니다. 수정하지마세요!
SELECT * FROM employees;

+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| emp_no      | int(11)       | NO   | PRI | NULL    |       |
| birth_date  | date          | NO   |     | NULL    |       |
| first_name  | varchar(14)   | NO   |     | NULL    |       |
| last_name   | varchar(16)   | NO   |     | NULL    |       |
| gender      | enum('M','F') | NO   |     | NULL    |       |
| hire_date   | date          | NO   |     | NULL    |       |
| superior_no | int(11)       | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
+--------+------------+------------+-----------+--------+------------+-------------+
| emp_no | birth_date | first_name | last_name | gender | hire_date  | superior_no |
+--------+------------+------------+-----------+--------+------------+-------------+
|  10001 | 1953-09-02 | Georgi     | Facello   | M      | 1986-06-26 |        NULL |
+--------+------------+------------+-----------+--------+------------+-------------+

-- [실습7] 데이터 수정하기 1
-- 대출 반납의 정보가 담긴 테이블의 구조를 조회합니다. 수정하실 필요는 없습니다.
DESC rental;

-- 반납 시간을 수정하는 쿼리를 작성해 보세요.
UPDATE rental
SET rental_end_date = '2019-04-05 12:00:30'
WHERE id = 1000;


-- 대출 반납 상태를 조회합니다. 반납시간이 올바르게 추가되었는지는 실행버튼을 통해 확인할 수 있습니다.
SELECT * FROM rental;

+-------------------+----------+------+-----+---------+-------+
| Field             | Type     | Null | Key | Default | Extra |
+-------------------+----------+------+-----+---------+-------+
| id                | int(11)  | NO   | PRI | NULL    |       |
| book_id           | int(11)  | NO   | MUL | NULL    |       |
| user_id           | int(11)  | NO   | MUL | NULL    |       |
| rental_begin_date | datetime | YES  |     | NULL    |       |
| rental_end_date   | datetime | YES  |     | NULL    |       |
+-------------------+----------+------+-----+---------+-------+
+------+---------+---------+---------------------+---------------------+
| id   | book_id | user_id | rental_begin_date   | rental_end_date     |
+------+---------+---------+---------------------+---------------------+
| 1000 |    1000 |    1000 | 2019-04-01 19:30:00 | 2019-04-05 12:00:30 |
| 1001 |    1000 |    1001 | 2019-02-20 12:00:00 | 2019-03-01 13:00:00 |
| 1002 |    1001 |    1001 | 2019-03-10 11:45:00 | 2019-04-01 10:10:10 |
+------+---------+---------+---------------------+---------------------+


-- [실습8] 데이터 수정하기 2

-- UPDATE문을 이용해 쿼리를 작성해 보세요.

UPDATE employees
SET birth_date = '1953-09-01'
WHERE emp_no = 10001;
-- 값을 잘 수정했는지 확인하는 코드입니다. 수정하지마세요!
SELECT * FROM employees;

+--------+------------+------------+-----------+--------+------------+-------------+
| emp_no | birth_date | first_name | last_name | gender | hire_date  | superior_no |
+--------+------------+------------+-----------+--------+------------+-------------+
|  10001 | 1953-09-01 | Georgi     | Facello   | M      | 1986-06-26 |        NULL |
|  10002 | 1964-06-02 | Bezalel    | Simmel    | F      | 1985-11-21 |        NULL |
|  10003 | 1959-12-03 | Parto      | Bamford   | M      | 1986-08-28 |        NULL |
|  10004 | 1954-05-01 | Chirstian  | Koblick   | M      | 1986-12-01 |        NULL |
|  10005 | 1955-01-21 | Kyoichi    | Maliniak  | M      | 1989-09-12 |       10001 |
|  10006 | 1953-04-20 | Anneke     | Preusig   | F      | 1989-06-02 |       10002 |
|  10007 | 1957-05-23 | Tzvetan    | Zielinski | F      | 1989-02-10 |       10002 |
|  10008 | 1958-02-19 | Saniya     | Kalloufi  | M      | 1994-09-15 |        NULL |
|  10009 | 1952-04-19 | Sumant     | Peac      | F      | 1985-02-18 |        NULL |
|  10010 | 1963-06-01 | Duangkaew  | Piveteau  | F      | 1989-08-24 |       10001 |
+--------+------------+------------+-----------+--------+------------+-------------+


-- [실습9] 데이터 삭제하기 1
-- SQL에서 문자열 속에 '를 넣기 위해서는 \'로 넣어야 합니다.
DELETE FROM book
WHERE title ='Harry Potter and the Philosopher\'s Stone';

DELETE FROM book
WHERE title ='The Lord of the Rings';


-- 전체 책의 정보와 회원정보를 조회합니다. 수정하실 필요는 없습니다.
SELECT * FROM book;

+------+-------------------+------------------------------+-----------+---------------+
| id   | title             | author                       | publisher | date_received |
+------+-------------------+------------------------------+-----------+---------------+
| 1000 | Romeo and Juliet  | William Shakespeare          | NULL      | 2012-04-01    |
| 1001 | Don Quixote       | Miguel de Cervantes Saavedra | NULL      | 2015-03-31    |
| 1002 | The Little Prince | Antoine de Saint-Exupery     | NULL      | 2018-12-21    |
+------+-------------------+------------------------------+-----------+---------------+

-- [실습10] 데이터 삭제하기 2

-- DELETE문을 이용해 쿼리를 작성해 보세요.
-- employees 테이블에서 퇴사한 직원 'Maliniak Kyoichi' 을 데이터베이스에서 삭제해봅시다. 'Maliniak Kyoichi' 의 직원 번호는 10005입니다.
DELETE FROM employees
WHERE emp_no = 10005;

-- 값을 잘 삭제했는지 확인하는 코드입니다. 수정하지마세요!
SELECT * FROM employees;

+--------+------------+------------+-----------+--------+------------+-------------+
| emp_no | birth_date | first_name | last_name | gender | hire_date  | superior_no |
+--------+------------+------------+-----------+--------+------------+-------------+
|  10001 | 1953-09-01 | Georgi     | Facello   | M      | 1986-06-26 |        NULL |
|  10002 | 1964-06-02 | Bezalel    | Simmel    | F      | 1985-11-21 |        NULL |
|  10003 | 1959-12-03 | Parto      | Bamford   | M      | 1986-08-28 |        NULL |
|  10004 | 1954-05-01 | Chirstian  | Koblick   | M      | 1986-12-01 |        NULL |
|  10006 | 1953-04-20 | Anneke     | Preusig   | F      | 1989-06-02 |       10002 |
|  10007 | 1957-05-23 | Tzvetan    | Zielinski | F      | 1989-02-10 |       10002 |
|  10008 | 1958-02-19 | Saniya     | Kalloufi  | M      | 1994-09-15 |        NULL |
|  10009 | 1952-04-19 | Sumant     | Peac      | F      | 1985-02-18 |        NULL |
|  10010 | 1963-06-01 | Duangkaew  | Piveteau  | F      | 1989-08-24 |       10001 |
+--------+------------+------------+-----------+--------+------------+-------------+

